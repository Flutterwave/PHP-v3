name: Create Release

on:
  push:
    tags:
      - 'v*'  # Trigger on new version tags like v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'  # Specify the PHP version your project uses
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
    
    - name: Install dependencies
      run: |
        composer install --no-dev --optimize-autoloader  # Install PHP dependencies without dev dependencies
    
    - name: Create artifact
      run: |
        mkdir -p artifact
        cp -r vendor artifact/  # Copy the vendor folder into the artifact directory
                # Copy specific files and directories into the artifact directory
        cp -r src artifact/             # Copy src directory
        cp -r assets artifact/          # Copy assets directory
        cp composer.json artifact/      # Copy composer.json
        cp README.md artifact/          # Copy README.md
        cp CHANGELOG.md artifact/       # Copy CHANGELOG.md
        cp paymentForm.php artifact/    # Copy paymentForm.php
        cp processPayment.php artifact/ # Copy processPayment.php
        cp phpunit.xml.dist artifact/   # Copy phpunit.xml.dist
        cp LICENSE artifact/            # Copy LICENSE
        cp .gitignore artifact/         # Copy .gitignore
        cp .env.example artifact/       # Copy .env.example
        cp setup.php artifact/          # Copy setup.php

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: flutterwave-php
        path: artifact  # Upload the artifact folder containing vendor and other files

  release:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Create release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: artifact/*  # Path to all files in the artifact folder
        tag_name: v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload release asset (optional)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifact/*
        asset_name: flutterwave-php-with-vendor.zip  # Optional: You can rename it
        asset_content_type: application/zip